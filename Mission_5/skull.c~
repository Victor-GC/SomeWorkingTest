#include <linux/init.h>
#include <linux/module.h>
#include <linux/fs.h>
#include <linux/cdev>

MODULE_LICENSE("Dual BSD/GPL");

/*全局变量*/
int scull_major=SCULL_MAJOR;//主设备号，默认值为0，表示动态分配
int scull_minor=0;



struct file_operations scull_fops =
{
	.owner = THIS_MODULE,
	.llseek = scull_llseek,
	.read =   scull_read,
	.write =  scull_write,
	.ioctl =  scull_ioctl,
	.open =   scull_open,
	.release =scull_release,
};

/*设备注册*/
static void scull_setup_cdev(struct scull_dev *dev, int index)
{
	int err=0;
	dev_t devno=MKDEV(scull_major, scull_minor+index);

	cdev_init(&dev->cdev, &scull_fops);
	dev->cdev.owner = THIS_MODULE;
	dev->cdev.ops = &scull_fops;
	err = cdev_add(&dev->cdev, devno, 1);
	if(err)
	printk(KERN_NOTICE "Error %d adding scull%d", err, index);
}


static int scull_init(void)
{

}

static int scull_exit(void)
{

}

module_init(scull_init);
module_exit(scull_exit);
